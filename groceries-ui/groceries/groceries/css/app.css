body {
	padding-top: 6.6em;
	font-size: 2em !important;
}

.navbar {
    -webkit-box-shadow: 0 8px 6px -6px #999;
    -moz-box-shadow: 0 8px 6px -6px #999;
    box-shadow: 0 8px 6px -6px #999;

    /* the rest of your styling */
}

.price {
	font-weight: bold;
}

.price::after {
	content: 'â‚¬'
}

.checked-product {
	text-decoration: line-through;
	color:#D3D3D3;
}

.unchecked-product {
	color: #428bca;
}

.form-control {
	height: 2em !important;
	font-size: 1em !important;
}

.small-padding {
	padding-right: 0.1em !important;
    padding-left: 0.1em !important;
}

.form-control-feedback {
	padding-right: 2.2em;
	padding-top: .1em;
}

.btn {
	font-size: 1em !important;
}

.product-info {
	font-size: 0.8em !important;
}


.quantity-x-sml {
	font-size: 0.6em !important;
}

.quantity {
	font-weight: bold;
}

.dropdown-menu {
	font-size: 1em !important;
	width: 100% !important;
}

.alert {
	margin-bottom: 0px !important;
	padding: 8px !important;;
}

.form-group {
	margin-bottom: 0px !important;
}

/* .row {
	margin-right: 0px !important;
} */

.full-width {
	width: 100%;
}

.nopadding {
   padding: 0 !important;
   margin: 0 !important;
}

/* span {
	border: 1px solid gray;
} */
.editable-input.editable-has-buttons {
	width: 80% !important;
}
div[class*=" editable-"] {
	color: red;
}

.editable-controls {
	z-index: auto;
}

div.special>div[class*="col-"] {
	padding: 0;
}

@media ( max-width : 979px) {
}

.row.no-gutters {
	margin-right: 0;
	margin-left: 0;
}

.row.no-gutters>[class^="col-"], .row.no-gutters>[class*=" col-"] {
	padding-right: 0;
	padding-left: 0;
}

.list-group {
	margin-bottom: 0px !important;
}

/* Animations */
/*
  We're using CSS transitions for when
  the enter and move events are triggered
  for the element that has the .repeated-item
  class
*/
.repeated-item.ng-enter, .repeated-item.ng-move {
  -webkit-transition:0.5s linear all;
  -moz-transition:0.5s linear all;
  -o-transition:0.5s linear all;
  transition:0.5s linear all;
  opacity:0;
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.repeated-item.ng-enter.ng-enter-active,
.repeated-item.ng-move.ng-move-active {
  opacity:1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .repeated-item class
*/
.repeated-item.ng-leave {
  -webkit-animation:0.5s my_animation;
  -moz-animation:0.5s my_animation;
  -o-animation:0.5s my_animation;
  animation:0.5s my_animation;
}

@keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

/*
  Unfortunately each browser vendor requires
  its own definition of keyframe animation code...
*/
@-webkit-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-moz-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

@-o-keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

.gray-icon {
	 opacity:.25;
}